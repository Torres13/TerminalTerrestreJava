/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package terminalterrestre;

import java.util.List;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
public class Ciudad extends javax.swing.JFrame {

    Connection _conexion;
    String _nomCiudad;
    List<String> _ciudades;
    DefaultTableModel tablaCiu;
    long _index;
    public Ciudad() {
        _ciudades = new ArrayList<String>();
        initComponents();  
        tablaCiu = (DefaultTableModel) tablaCiudad.getModel();
        cargaCiudades();
    }
     private void cargaCiudades()
    {
         
        tablaCiu.setRowCount(0);
        _ciudades.clear();
        
        String sentenciaSQL = "SELECT * FROM Destinos.Ciudad";
        
        try
        {
            _conexion = ConexionSQL.getConnection(); 
            PreparedStatement statement = _conexion.prepareStatement(sentenciaSQL);
            ResultSet result = statement.executeQuery();
            
            while(result.next())
            {
                tablaCiu.addRow(
                        new Object[]
                        {
                            result.getInt("IdCiudad"),
                            result.getString("NonCiudad")
                        });
                _ciudades.add(result.getString("NonCiudad")); 
            }
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Error al recuperar los Ciudades","Error", JOptionPane.ERROR_MESSAGE);            
        }       
    }
     
     private void insertaDato()     
     {
        String sentenciaSQL = "INSERT INTO Destinos.Ciudad (NonCiudad) VALUES (?)";
        
        try
        {
            revisaRepetidos(_nomCiudad);
            
            _conexion = ConexionSQL.getConnection(); 
            PreparedStatement statement = _conexion.prepareStatement(sentenciaSQL);            
            
           statement.setString(1,_nomCiudad);
           statement.executeUpdate();
           
           cargaCiudades();
           
           txbNombre.setText("");
           
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Error al insertar departamento","Error", JOptionPane.ERROR_MESSAGE); 
            txbNombre.setText("");
        }
     }
     
     private void eliminaDato()
     {
        String sentenciaSQL = "DELETE FROM Destinos.Ciudad WHERE IdCiudad = ?";
        
        try
        {            
            _conexion = ConexionSQL.getConnection(); 
            PreparedStatement statement = _conexion.prepareStatement(sentenciaSQL);            
            
           statement.setLong(1,_index);
           statement.executeUpdate();
           
           cargaCiudades();
           
           txbNombre.setText("");
           
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Error al eliminar Ciudad","Error", JOptionPane.ERROR_MESSAGE); 
            txbNombre.setText("");
        }

     }
     
     private void modificaDato()
     {
        String sentenciaSQL = "UPDATE Destinos.Ciudad SET NonCiudad = ? WHERE IdCiudad = ?";
        
        try
        {
            revisaRepetidos(_nomCiudad);
            
            _conexion = ConexionSQL.getConnection(); 
            PreparedStatement statement = _conexion.prepareStatement(sentenciaSQL);            
            
           statement.setString(1,_nomCiudad);
           statement.setLong(2,_index);
           statement.executeUpdate();
           
           cargaCiudades();
           
           txbNombre.setText("");
           
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Error al modificar departamento","Error", JOptionPane.ERROR_MESSAGE); 
            txbNombre.setText("");
        }
     }

     private void revisaRepetidos(String ciudad)
    {        
        for(String Ciudad : _ciudades)
        {
            if (Ciudad.equals(ciudad)) 
            {
                var ex = new IllegalArgumentException();
                throw ex;                   
            }
        }           
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnAgregar2 = new javax.swing.JButton();
        txbNombre = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCiudad = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ciudad");

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnAgregar2.setText("Agregar");
        btnAgregar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregar2ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("Nombre de la Ciudad");

        tablaCiudad.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Id de la Ciudad", "Nombre de la Ciudad"
            }
        ));
        tablaCiudad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaCiudadMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaCiudad);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txbNombre)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnAgregar2)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnModificar)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnEliminar)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)))
                        .addGap(83, 83, 83))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txbNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEliminar)
                            .addComponent(btnModificar)
                            .addComponent(btnAgregar2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregar2ActionPerformed(java.awt.event.ActionEvent evt) {
         _nomCiudad = txbNombre.getText().trim();
        if (_nomCiudad.isEmpty()) 
        {
            JOptionPane.showMessageDialog(null, "Campo Nombre del Departamento Vacio ","Error", JOptionPane.ERROR_MESSAGE); 
        }
        else
        {
            insertaDato();
        }
    }

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) 
    {
        _nomCiudad = txbNombre.getText().trim();
        if (_nomCiudad.isEmpty()) 
        {
            JOptionPane.showMessageDialog(null, "Campo Nombre del Departamento Vacio ","Error", JOptionPane.ERROR_MESSAGE); 
        }
        else
        {
            modificaDato();
        }
    }
    

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt)
    {    
        _nomCiudad = txbNombre.getText().trim();
        if (_nomCiudad.isEmpty()) 
        {
            JOptionPane.showMessageDialog(null, "Debes seleccionar un elemento a eliminar","Error", JOptionPane.ERROR_MESSAGE); 
        }
        else
        {
            eliminaDato();
        }      
        
    }
    

    private void tablaCiudadMouseClicked(java.awt.event.MouseEvent evt) 
    {
        int row =-1 ;
        row = tablaCiudad.rowAtPoint(evt.getPoint());

        _nomCiudad = (String)tablaCiudad.getValueAt(row, 1);
        _index = (int)tablaCiudad.getValueAt(row, 0);

        txbNombre.setText(_nomCiudad);
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ciudad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ciudad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ciudad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ciudad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ciudad().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar2;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaCiudad;
    private javax.swing.JTextField txbNombre;
    // End of variables declaration//GEN-END:variables
}
